#+TITLE: OSX layer

[[file:img/apple.png]]

* Table of Contents                                         :TOC_4_gh:noexport:
- [[#description][Description]]
  - [[#features][Features:]]
- [[#philosophy][Philosophy]]
- [[#install][Install]]
  - [[#layer][Layer]]
    - [[#use-with-non-us-keyboard-layouts][Use with non-US keyboard layouts]]
    - [[#define-words-using-os-x-dictionary][Define words using OS X Dictionary]]
    - [[#separate-osx-and-spacemacs-clipboards][Separate OSX and spacemacs clipboards]]
  - [[#coreutils][Coreutils]]
- [[#key-bindings][Key Bindings]]
- [[#future-work][Future Work]]

* Description

Spacemacs is not just emacs+vim. It can have OSX keybindings too! This layer
adds tools for better integration in OSX.

** Features:

- Provides common OSX keybindings, such as: ~⌘ =~ and ~⌘ -~ to change font size;
  ~⌘ q~ to quit Spacemacs; ~⌘ c~, ~⌘ x~ and ~⌘ v~ for copy/cut/paste; ~⌘ a~ for
  select all. Refer to the overview of keybindings below.

- Provides closer integration with OSX, such as: reveal files in Finder; use the
  OSX trash via the Finder API (only on Emacs from MacPorts); use =mdfind=
  instead of =locate= in helm.

- Enables remapping of the modifier keys found on Mac keyboards, with the option
  to treat the right modifier key differently from the left one. By default ~⌘~
  is set to ~hyper~ and ~⌥~ is set to ~meta~.

- Provides a transient interface to =launchctl=, mapped by default to ~SPC a l~.

- Provides option to use the OSX dictionary as default instead of wordnet.

- Provides option to unify or separate the OSX pasteboard from the spacemacs
  kill-ring. By default they are unified, both in graphical and text mode.

- While in =dired= this layer will try to use =gls= instead of =ls=.

- Uses the OSX Emoji font for emoticons.

* Philosophy
While this layer enables common OSX bindings, it does not implement OSX
navigation keybindings. Spacemacs is meant to be used with evil, and we
encourage you to do so :)

* Install
** Layer

Layer has been updated for new config variables. The variable =osx-use-option-as-meta=
is still available for backwards compatibility and will take precedence if set.

To use this configuration layer, add it to your =~/.spacemacs=. You will need to
add =osx= to the existing =dotspacemacs-configuration-layers= list in this file.
The different modifier keys can be set as follows:

#+BEGIN_SRC emacs-lisp
  (setq-defaults dotspacemacs-configuration-layers '(
     (osx :variables osx-command-as       'hyper
                     osx-option-as        'meta
                     osx-control-as       'control
                     osx-function-as      'none
                     osx-right-command-as 'left
                     osx-right-option-as  'left
                     osx-right-control-as 'left))
#+END_SRC

These are also the default values. Setting the right modifier to =left=
will equal the left modifier. Allowed values are: =super=, =meta=, =control=,
=alt= and =none=.
Setting =nil= for modifiers will leave the left modifiers as emacs default.

*** Use with non-US keyboard layouts
If you need the ~⌥~ key to type common characters such as ={[]}~= which is usual
for e.g. Finnish and Swedish keyboard layouts, you'll probably want to leave the
~⌥~ key unchanged by setting the =osx-option-as= variable to =none=:

#+BEGIN_SRC emacs-lisp
  (setq-default dotspacemacs-configuration-layers '(
     (osx :variables osx-option-as 'none)))
#+END_SRC

If you have problem entering symbols that are behind the ~⌥~ key you may want to
set the variables as follows. This will allow you to use
the right ~⌥~ key to write symbols. The left ~⌥~ key can be used as the Meta
key.

#+BEGIN_SRC emacs-lisp
  (setq-default dotspacemacs-configuration-layers '(
     (osx :variables osx-option-as 'meta
                     osx-right-option-as 'none)))
#+END_SRC

*** Define words using OS X Dictionary

This layer by default enables defining words under point ~SPC x w d~ using OS X
Dictionary. In some cases you might want to manually setup dictionary to use.
For example,

#+BEGIN_SRC emacs-lisp
  (setq-default dotspacemacs-configuration-layers '(
     (osx :variables osx-dictionary-dictionary-choice "English")))
#+END_SRC

To get the list of available dictionaries call =osx/list-available-dictionaries=
function.

You can disable it by setting =osx-use-dictionary-app= variable to =nil=:

#+BEGIN_SRC emacs-lisp
  (setq-default dotspacemacs-configuration-layers '(
     (osx :variables osx-use-dictionary-app nil)))
#+END_SRC

*** Separate OSX and spacemacs clipboards

By default this layer treats the OSX pasteboard and the spacemacs kill-ring as a
single clipboard. It supports treating them as separate clipboards by setting
the =osx-use-separate-clipboards= variable to =t=:

#+BEGIN_SRC emacs-lisp
  (setq-default dotspacemacs-configuration-layers '(
     (osx :variables osx-use-separate-clipboards t)))
#+END_SRC

This setting can be toggled with ~SPC t R~.

When this feature is disabled, this layer treats the OSX system pasteboard and
the spacemacs kill-ring as a single clipboard: a region killed in spacemacs will
be readily available for pasting into another application, and conversely a text
copied from another application can be readily yanked into spacemacs. The usual
OSX keybindings (~⌘ c~, ~⌘ x~ and ~⌘ v~) and the spacemacs commands can be used
interchangeably to operate on the clipboard.

When this feature is enabled, the keybindings ~⌘ c~, ~⌘ x~ and ~⌘ v~ operate on
the OSX pasteboard, while the spacemacs commands operate on the spacemacs
kill-ring.

NOTE: when spacemacs is started in graphical mode, the value of this setting has
no impact on spacemacs commands that directly operate on the system clipboard,
such as ="+y= and ="+d= -- they will always operate on the system clipboard.

NOTE: when spacemacs is started in text mode (i.e. in a terminal), the
keybindings involving the command key (~⌘~) are not propagated from the terminal
to spacemacs, meaning the keybindings ~⌘ c~, ~⌘ x~ and ~⌘ v~ do not work.
Therefore, when the feature is enabled (i.e. separate clipboards), you will have
to use the capabilities of your terminal to copy/paste. ="+y= and ="+d= do not
work.

** Coreutils
To get =gls= install coreutils homebrew:

#+BEGIN_SRC sh
  brew install coreutils
#+END_SRC

* Key Bindings

| Key Binding | Description                              |
|-------------+------------------------------------------|
| ~⌘ =~       | Scale up text                            |
| ~⌘ -~       | Scale down text                          |
| ~⌘ 0~       | Reset text size                          |
| ~⌘ q~       | Quit                                     |
| ~⌘ v~       | Paste                                    |
| ~⌘ c~       | Copy                                     |
| ~⌘ x~       | Cut                                      |
| ~⌘ a~       | Select all                               |
| ~⌘ w~       | Close window                             |
| ~⌘ W~       | Close frame                              |
| ~⌘ n~       | New frame                                |
| ~⌘ `~       | Other frame                              |
| ~⌘ z~       | Undo                                     |
| ~⌘ Z~       | Redo                                     |
| ~⌘ s~       | Save buffer                              |
| ~⌘ N~       | Select window N (N between 1 and 9)      |
| ~⌃ ⌘ f~     | Toggle fullscreen                        |
| ~SPC x w d~ | Define word under the point              |
| ~SPC a l~   | Open transient interface for =launchctl= |
| ~SPC t R~   | Toggle separate clipboards               |

* Future Work
- Allow user to choose from either ~hyper~ or ~super~ as ~⌘~. This is an option
  that is supported cross-platform.
